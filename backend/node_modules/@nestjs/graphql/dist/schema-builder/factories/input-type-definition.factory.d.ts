import { GraphQLInputObjectType } from 'graphql';
import { BuildSchemaOptions } from '@nestjs/graphql/lib/interfaces';
import { ClassMetadata } from '@nestjs/graphql/lib/schema-builder/metadata';
import { TypeFieldsAccessor } from '@nestjs/graphql/lib/schema-builder/services/type-fields.accessor';
import { TypeDefinitionsStorage } from '@nestjs/graphql/lib/schema-builder/storages/type-definitions.storage';
import { AstDefinitionNodeFactory } from '@nestjs/graphql/lib/schema-builder/factories/ast-definition-node.factory';
import { InputTypeFactory } from '@nestjs/graphql/lib/schema-builder/factories/input-type.factory';
export interface InputTypeDefinition {
    target: Function;
    type: GraphQLInputObjectType;
    isAbstract: boolean;
}
export declare class InputTypeDefinitionFactory {
    private readonly typeDefinitionsStorage;
    private readonly inputTypeFactory;
    private readonly typeFieldsAccessor;
    private readonly astDefinitionNodeFactory;
    constructor(typeDefinitionsStorage: TypeDefinitionsStorage, inputTypeFactory: InputTypeFactory, typeFieldsAccessor: TypeFieldsAccessor, astDefinitionNodeFactory: AstDefinitionNodeFactory);
    create(metadata: ClassMetadata, options: BuildSchemaOptions): InputTypeDefinition;
    private generateFields;
}
//# sourceMappingURL=input-type-definition.factory.d.ts.map